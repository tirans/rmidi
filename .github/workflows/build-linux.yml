name: Build Linux

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: 'Application version'
      build-type:
        required: false
        type: string
        default: 'production'
        description: 'Build type (dev, staging, production)'
    outputs:
      artifact-name:
        description: "Name of the uploaded artifact"
        value: ${{ jobs.build-linux.outputs.artifact-name }}
  workflow_dispatch:
    inputs:
      build-type:
        description: 'Build type'
        required: false
        type: choice
        options:
          - dev
          - staging
          - production
        default: 'dev'

jobs:
  build-linux:
    name: Build Linux Apps
    runs-on: ubuntu-latest
    timeout-minutes: 45
    outputs:
      artifact-name: ${{ steps.upload.outputs.artifact-name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            r2midi_client/requirements.txt

      - name: Get application version
        id: version
        shell: bash
        run: |
          if [ -n "${{ inputs.version }}" ]; then
            VERSION="${{ inputs.version }}"
          else
            VERSION=$(grep -o '__version__ = "[^"]*"' server/version.py | cut -d'"' -f2)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Validate build environment
        shell: bash
        run: |
          ./.github/scripts/validate-build-environment.sh linux

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev \
            portaudio19-dev \
            build-essential \
            pkg-config \
            libffi-dev \
            libssl-dev

      - name: Install Python dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install briefcase
          python -m pip install -r requirements.txt
          if [ -f r2midi_client/requirements.txt ]; then 
            pip install -r r2midi_client/requirements.txt
          fi

      - name: Build applications
        shell: bash
        run: |
          ./.github/scripts/build-briefcase-apps.sh linux unsigned

      - name: Package applications
        shell: bash
        run: |
          ./.github/scripts/package-linux-apps.sh "${{ steps.version.outputs.version }}" "${{ inputs.build-type }}"

      - name: Upload artifacts
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ inputs.build-type }}-${{ github.run_number }}
          path: artifacts/
          retention-days: ${{ inputs.build-type == 'production' && 90 || 30 }}
          compression-level: 6

      - name: Build summary
        shell: bash
        run: |
          echo "## 🐧 Linux Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Build Type:** ${{ inputs.build-type }}" >> $GITHUB_STEP_SUMMARY
          echo "**Signing:** Unsigned (as requested)" >> $GITHUB_STEP_SUMMARY
          echo "**Build Tool:** Briefcase" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -d "artifacts" ]; then
            echo "### 📦 Created Packages:" >> $GITHUB_STEP_SUMMARY
            find artifacts -name "*.deb" -o -name "*.tar.gz" -o -name "*.AppImage" | while read file; do
              if [ -f "$file" ]; then
                size=$(du -h "$file" | cut -f1)
                echo "- $(basename "$file") ($size)" >> $GITHUB_STEP_SUMMARY
              fi
            done
          fi